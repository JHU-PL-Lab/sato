 16:25:19 up 722 days, 27 min,  4 users,  load average: 0.32, 0.17, 0.25
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 7 nodes and 29 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 7 nodes and 29 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 65 nodes and 275 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 65 nodes and 275 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 66 nodes and 277 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 66 nodes and 277 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 71 nodes and 321 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 85 nodes and 392 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 88 nodes and 419 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 90 nodes and 421 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 90 nodes and 421 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 90 nodes and 421 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 105 nodes and 508 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 118 nodes and 603 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 118 nodes and 603 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 138 nodes and 707 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 138 nodes and 707 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 138 nodes and 707 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 138 nodes and 707 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 139 nodes and 709 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 164 nodes and 843 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 189 nodes and 983 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 202 nodes and 1064 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 206 nodes and 1084 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 208 nodes and 1087 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 231 nodes and 1214 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 233 nodes and 1244 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 236 nodes and 1295 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 238 nodes and 1326 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 257 nodes and 1426 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 259 nodes and 1430 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 262 nodes and 1437 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:19:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 291 nodes and 1619 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 663 nodes and 3765 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 678 nodes and 3859 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:20:DEBUG: [Pds_reachability_analysis]: get_reachable_states: analysis has 1182 nodes and 7227 edges
2019/07/10 16:25:21:DEBUG: [Symbolic_monad]: Symbolic monad evaluation produced a result:
  Value:
    <no printer>
  Formulae:
    {
   binop~11[] = input~4[-appl~38] == int~10[],
   binop~11[] = false,
   binop~33[-appl~38] = int~32[-appl~38] <= input~3[-appl~38],
   binop~35[-appl~38] = int~34[-appl~38] <= input~4[-appl~38],
   binop~36[-appl~38] = binop~33[-appl~38] and binop~35[-appl~38],
   binop~36[-appl~38] = true,
   binop~7[] = input~3[-appl~38] == int~6[],
   binop~7[] = false,
   flatten_fun~28[-appl~38+appl~37] = fun n -> (
   
     appl~5 = ack~0 ack~0;
     ack~1 = appl~5;
     int~6 = 0;
     binop~7 = m == int~6;
     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                             int~10 = 0;
                                                             binop~11 = n == int~10;
                                                             if~26 = binop~11 
                                                             ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                                            )
     ),
   flatten_fun~29[+appl~5] = fun m -> (
   
     flatten_fun~28 = fun n -> (
     
       appl~5 = ack~0 ack~0;
       ack~1 = appl~5;
       int~6 = 0;
       binop~7 = m == int~6;
       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                               int~10 = 0;
                                                               binop~11 = n == int~10;
                                                               if~26 = binop~11 
                                                               ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                              )
       )
     ),
   flatten_fun~29[-appl~38+appl~31] = fun m -> (
   
     flatten_fun~28 = fun n -> (
     
       appl~5 = ack~0 ack~0;
       ack~1 = appl~5;
       int~6 = 0;
       binop~7 = m == int~6;
       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                               int~10 = 0;
                                                               binop~11 = n == int~10;
                                                               if~26 = binop~11 
                                                               ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                              )
       )
     ),
   flatten_fun~30[-appl~38] = fun ack~0 -> (
   
     flatten_fun~29 = fun m -> (
     
       flatten_fun~28 = fun n -> (
       
         appl~5 = ack~0 ack~0;
         ack~1 = appl~5;
         int~6 = 0;
         binop~7 = m == int~6;
         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                                 int~10 = 0;
                                                                 binop~11 = n == int~10;
                                                                 if~26 = binop~11 
                                                                 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                                )
         )
       )
     ),
   int~10[] = 0,
   int~17[] = 0,
   int~32[-appl~38] = 0,
   int~34[-appl~38] = 0,
   int~6[] = 0,
   #true# = input~3[-appl~38] == input~3[-appl~38],
   #true# = input~4[-appl~38] == input~4[-appl~38]
}
  Decisions:
    {
   [] -> ((Ast.Ident "n"), appl~38 = appl~37 yi, (Ast.Ident "yi")),
   [+appl~5] ->
     ((Ast.Ident "ack~0"), appl~5 = ack~0 ack~0, (Ast.Ident "ack~0")),
   [-appl~38+appl~31] ->
     ((Ast.Ident "ack~0"), appl~31 = ack~0~2 ack~0~2, (Ast.Ident "ack~0~2")),
   [-appl~38+appl~37] ->
     ((Ast.Ident "m"), appl~37 = ack xi, (Ast.Ident "xi"))
}
  Result steps: 690787185
  Cache size: 2564

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {}
Last var:    None
Clauses:     
                                                  input~3__at__ = input;
                                                  xi__at__ = input~3__at__;
                                                  input~4__at__ = input;
                                                  yi__at__ = input~4__at__;
                                                  flatten_fun~30__at__ = fun ack~0 -> (
                                                  
                                                    flatten_fun~29 = fun m -> (
                                                    
                                                      flatten_fun~28 = fun n -> (
                                                      
                                                        appl~5 = ack~0 ack~0;
                                                        ack~1 = appl~5;
                                                        int~6 = 0;
                                                        binop~7 = m == int~6;
                                                        if~27 = binop~7 
                                                        ? (
                                                             int~8 = 1;
                                                             binop~9 = n + int~8
                                                            ) : (
                                                                   int~10 = 0;
                                                                   binop~11 = n == int~10;
                                                                   if~26 = binop~11 
                                                                   ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                                  )
                                                        )
                                                      )
                                                    );
                                                  ack~0~2__at__ = flatten_fun~30__at__;
                                                  appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
                                                  ack__at__ = appl~31__at__;
                                                  int~32__at__ = 0;
                                                  binop~33__at__ = int~32__at__ <= xi__at__;
                                                  int~34__at__ = 0;
                                                  binop~35__at__ = int~34__at__ <= yi__at__;
                                                  binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                  if~40__at__ = binop~36__at__ 
                                                  ? (
                                                       appl~37__at__ = ack__at__ xi__at__;
                                                       appl~38__at__ = appl~37__at__ yi__at__
                                                      ) : (int~39__at__ = 0);
                                                  ~result__at__ = if~40__at__
                                                

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {input~3__at__ -> 1}
Last var:    Some(input~3__at__)
Clauses:     

  xi__at__ = input~3__at__;
  input~4__at__ = input;
  yi__at__ = input~4__at__;
  flatten_fun~30__at__ = fun ack~0 -> (
  
    flatten_fun~29 = fun m -> (
    
      flatten_fun~28 = fun n -> (
      
        appl~5 = ack~0 ack~0;
        ack~1 = appl~5;
        int~6 = 0;
        binop~7 = m == int~6;
        if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                                int~10 = 0;
                                                                binop~11 = n == int~10;
                                                                if~26 = binop~11 
                                                                ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                               )
        )
      )
    );
  ack~0~2__at__ = flatten_fun~30__at__;
  appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
  ack__at__ = appl~31__at__;
  int~32__at__ = 0;
  binop~33__at__ = int~32__at__ <= xi__at__;
  int~34__at__ = 0;
  binop~35__at__ = int~34__at__ <= yi__at__;
  binop~36__at__ = binop~33__at__ and binop~35__at__;
  if~40__at__ = binop~36__at__ ? (
                                    appl~37__at__ = ack__at__ xi__at__;
                                    appl~38__at__ = appl~37__at__ yi__at__
                                   ) : (int~39__at__ = 0);
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {xi__at__ -> 1, input~3__at__ -> 1}
Last var:    Some(xi__at__)
Clauses:     

  input~4__at__ = input;
  yi__at__ = input~4__at__;
  flatten_fun~30__at__ = fun ack~0 -> (
  
    flatten_fun~29 = fun m -> (
    
      flatten_fun~28 = fun n -> (
      
        appl~5 = ack~0 ack~0;
        ack~1 = appl~5;
        int~6 = 0;
        binop~7 = m == int~6;
        if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                                int~10 = 0;
                                                                binop~11 = n == int~10;
                                                                if~26 = binop~11 
                                                                ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                               )
        )
      )
    );
  ack~0~2__at__ = flatten_fun~30__at__;
  appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
  ack__at__ = appl~31__at__;
  int~32__at__ = 0;
  binop~33__at__ = int~32__at__ <= xi__at__;
  int~34__at__ = 0;
  binop~35__at__ = int~34__at__ <= yi__at__;
  binop~36__at__ = binop~33__at__ and binop~35__at__;
  if~40__at__ = binop~36__at__ ? (
                                    appl~37__at__ = ack__at__ xi__at__;
                                    appl~38__at__ = appl~37__at__ yi__at__
                                   ) : (int~39__at__ = 0);
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {xi__at__ -> 1, input~4__at__ -> 1, input~3__at__ -> 1}
Last var:    
Some(input~4__at__)
Clauses:     
                                   yi__at__ = input~4__at__;
                                   flatten_fun~30__at__ = fun ack~0 -> (
                                   
                                     flatten_fun~29 = fun m -> (
                                     
                                       flatten_fun~28 = fun n -> (
                                       
                                         appl~5 = ack~0 ack~0;
                                         ack~1 = appl~5;
                                         int~6 = 0;
                                         binop~7 = m == int~6;
                                         if~27 = binop~7 ? (
                                                              int~8 = 1;
                                                              binop~9 = n + int~8
                                                             ) : (
                                                                    int~10 = 0;
                                                                    binop~11 = n == int~10;
                                                                    if~26 = binop~11 
                                                                    ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                                   )
                                         )
                                       )
                                     );
                                   ack~0~2__at__ = flatten_fun~30__at__;
                                   appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
                                   ack__at__ = appl~31__at__;
                                   int~32__at__ = 0;
                                   binop~33__at__ = int~32__at__ <= xi__at__;
                                   int~34__at__ = 0;
                                   binop~35__at__ = int~34__at__ <= yi__at__;
                                   binop~36__at__ = binop~33__at__ and binop~35__at__;
                                   if~40__at__ = binop~36__at__ ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                   ~result__at__ = if~40__at__
                                 

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 input~4__at__ -> 1,
                 input~3__at__ -> 1
              }
Last var:    Some(yi__at__)
Clauses:     
                                                           flatten_fun~30__at__ = fun ack~0 -> (
                                                           
                                                             flatten_fun~29 = fun m -> (
                                                             
                                                               flatten_fun~28 = fun n -> (
                                                               
                                                                 appl~5 = ack~0 ack~0;
                                                                 ack~1 = appl~5;
                                                                 int~6 = 0;
                                                                 binop~7 = m == int~6;
                                                                 if~27 = binop~7 
                                                                 ? (
                                                                    int~8 = 1;
                                                                    binop~9 = n + int~8
                                                                    ) : 
                                                                    (
                                                                    int~10 = 0;
                                                                    binop~11 = n == int~10;
                                                                    if~26 = binop~11 
                                                                    ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    ))
                                                                 )
                                                               )
                                                             );
                                                           ack~0~2__at__ = flatten_fun~30__at__;
                                                           appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
                                                           ack__at__ = appl~31__at__;
                                                           int~32__at__ = 0;
                                                           binop~33__at__ = int~32__at__ <= xi__at__;
                                                           int~34__at__ = 0;
                                                           binop~35__at__ = int~34__at__ <= yi__at__;
                                                           binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                           if~40__at__ = binop~36__at__ 
                                                           ? (
                                                                appl~37__at__ = ack__at__ xi__at__;
                                                                appl~38__at__ = appl~37__at__ yi__at__
                                                               ) : (
                                                                    int~39__at__ = 0
                                                                    );
                                                           ~result__at__ = if~40__at__
                                                         

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1
              }
Last var:    Some(flatten_fun~30__at__)
Clauses:     

  ack~0~2__at__ = flatten_fun~30__at__;
  appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
  ack__at__ = appl~31__at__;
  int~32__at__ = 0;
  binop~33__at__ = int~32__at__ <= xi__at__;
  int~34__at__ = 0;
  binop~35__at__ = int~34__at__ <= yi__at__;
  binop~36__at__ = binop~33__at__ and binop~35__at__;
  if~40__at__ = binop~36__at__ ? (
                                    appl~37__at__ = ack__at__ xi__at__;
                                    appl~38__at__ = appl~37__at__ yi__at__
                                   ) : (int~39__at__ = 0);
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     )
              }
Last var:    Some(ack~0~2__at__)
Clauses:     
                                                                appl~31__at__ = ack~0~2__at__ ack~0~2__at__;
                                                                ack__at__ = appl~31__at__;
                                                                int~32__at__ = 0;
                                                                binop~33__at__ = int~32__at__ <= xi__at__;
                                                                int~34__at__ = 0;
                                                                binop~35__at__ = int~34__at__ <= yi__at__;
                                                                binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                                if~40__at__ = binop~36__at__ 
                                                                ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     )
              }
Last var:    Some(appl~31__at__)
Clauses:     
                                                                ack~0__at____appl~31 = ack~0~2__at__;
                                                                flatten_fun~29__at____appl~31 = fun m -> (
                                                                
                                                                  flatten_fun~28 = fun n -> (
                                                                  
                                                                    appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                                                                    ack~1 = appl~5;
                                                                    int~6 = 0;
                                                                    binop~7 = m == int~6;
                                                                    if~27 = binop~7 
                                                                    ? (
                                                                    int~8 = 1;
                                                                    binop~9 = n + int~8
                                                                    ) : (
                                                                    int~10 = 0;
                                                                    binop~11 = n == int~10;
                                                                    if~26 = binop~11 
                                                                    ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )))
                                                                  );
                                                                appl~31__at__ = flatten_fun~29__at____appl~31;
                                                                ack__at__ = appl~31__at__;
                                                                int~32__at__ = 0;
                                                                binop~33__at__ = int~32__at__ <= xi__at__;
                                                                int~34__at__ = 0;
                                                                binop~35__at__ = int~34__at__ <= yi__at__;
                                                                binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                                if~40__at__ = binop~36__at__ 
                                                                ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     )
              }
Last var:    Some(ack~0__at____appl~31)
Clauses:     

  flatten_fun~29__at____appl~31 = fun m -> (
  
    flatten_fun~28 = fun n -> (
    
      appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
      ack~1 = appl~5;
      int~6 = 0;
      binop~7 = m == int~6;
      if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                              int~10 = 0;
                                                              binop~11 = n == int~10;
                                                              if~26 = binop~11 
                                                              ? (
                                                                   int~12 = 1;
                                                                   binop~13 = m - int~12;
                                                                   appl~14 = ack~1 binop~13;
                                                                   int~15 = 1;
                                                                   appl~16 = appl~14 int~15
                                                                  ) : 
                                                                  (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                             )
      )
    );
  appl~31__at__ = flatten_fun~29__at____appl~31;
  ack__at__ = appl~31__at__;
  int~32__at__ = 0;
  binop~33__at__ = int~32__at__ <= xi__at__;
  int~34__at__ = 0;
  binop~35__at__ = int~34__at__ <= yi__at__;
  binop~36__at__ = binop~33__at__ and binop~35__at__;
  if~40__at__ = binop~36__at__ ? (
                                    appl~37__at__ = ack__at__ xi__at__;
                                    appl~38__at__ = appl~37__at__ yi__at__
                                   ) : (int~39__at__ = 0);
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     )
              }
Last var:    Some(flatten_fun~29__at____appl~31)
Clauses:     

  appl~31__at__ = flatten_fun~29__at____appl~31;
  ack__at__ = appl~31__at__;
  int~32__at__ = 0;
  binop~33__at__ = int~32__at__ <= xi__at__;
  int~34__at__ = 0;
  binop~35__at__ = int~34__at__ <= yi__at__;
  binop~36__at__ = binop~33__at__ and binop~35__at__;
  if~40__at__ = binop~36__at__ ? (
                                    appl~37__at__ = ack__at__ xi__at__;
                                    appl~38__at__ = appl~37__at__ yi__at__
                                   ) : (int~39__at__ = 0);
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~31__at__)
Clauses:     
                                                                ack__at__ = appl~31__at__;
                                                                int~32__at__ = 0;
                                                                binop~33__at__ = int~32__at__ <= xi__at__;
                                                                int~34__at__ = 0;
                                                                binop~35__at__ = int~34__at__ <= yi__at__;
                                                                binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                                if~40__at__ = binop~36__at__ 
                                                                ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(ack__at__)
Clauses:     
                                                            int~32__at__ = 0;
                                                            binop~33__at__ = int~32__at__ <= xi__at__;
                                                            int~34__at__ = 0;
                                                            binop~35__at__ = int~34__at__ <= yi__at__;
                                                            binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                            if~40__at__ = binop~36__at__ 
                                                            ? (
                                                                 appl~37__at__ = ack__at__ xi__at__;
                                                                 appl~38__at__ = appl~37__at__ yi__at__
                                                                ) : (
                                                                    int~39__at__ = 0
                                                                    );
                                                            ~result__at__ = if~40__at__
                                                          

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(int~32__at__)
Clauses:     
                                                               binop~33__at__ = int~32__at__ <= xi__at__;
                                                               int~34__at__ = 0;
                                                               binop~35__at__ = int~34__at__ <= yi__at__;
                                                               binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                               if~40__at__ = binop~36__at__ 
                                                               ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                   ) : 
                                                                   (
                                                                    int~39__at__ = 0
                                                                    );
                                                               ~result__at__ = if~40__at__
                                                             

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(binop~33__at__)
Clauses:     
                                                                 int~34__at__ = 0;
                                                                 binop~35__at__ = int~34__at__ <= yi__at__;
                                                                 binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                                 if~40__at__ = binop~36__at__ 
                                                                 ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                 ~result__at__ = if~40__at__
                                                               

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(int~34__at__)
Clauses:     
                                                               binop~35__at__ = int~34__at__ <= yi__at__;
                                                               binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                               if~40__at__ = binop~36__at__ 
                                                               ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                   ) : 
                                                                   (
                                                                    int~39__at__ = 0
                                                                    );
                                                               ~result__at__ = if~40__at__
                                                             

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(binop~35__at__)
Clauses:     
                                                                 binop~36__at__ = binop~33__at__ and binop~35__at__;
                                                                 if~40__at__ = binop~36__at__ 
                                                                 ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                 ~result__at__ = if~40__at__
                                                               

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(binop~36__at__)
Clauses:     
                                                                 if~40__at__ = binop~36__at__ 
                                                                 ? (
                                                                    appl~37__at__ = ack__at__ xi__at__;
                                                                    appl~38__at__ = appl~37__at__ yi__at__
                                                                    ) : 
                                                                    (
                                                                    int~39__at__ = 0
                                                                    );
                                                                 ~result__at__ = if~40__at__
                                                               

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(if~40__at__)
Clauses:     
                                                              appl~37__at__ = ack__at__ xi__at__;
                                                              appl~38__at__ = appl~37__at__ yi__at__;
                                                              if~40__at__ = appl~38__at__;
                                                              ~result__at__ = if~40__at__
                                                            

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~37__at__)
Clauses:     
                                                                m__at____appl~37 = xi__at__;
                                                                flatten_fun~28__at____appl~37 = fun n -> (
                                                                
                                                                  appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                                                                  ack~1 = appl~5;
                                                                  int~6 = 0;
                                                                  binop~7 = m__at____appl~37 == int~6;
                                                                  if~27 = binop~7 
                                                                  ? (
                                                                    int~8 = 1;
                                                                    binop~9 = n + int~8
                                                                    ) : 
                                                                    (
                                                                    int~10 = 0;
                                                                    binop~11 = n == int~10;
                                                                    if~26 = binop~11 
                                                                    ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m__at____appl~37 - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    ))
                                                                  );
                                                                appl~37__at__ = flatten_fun~28__at____appl~37;
                                                                appl~38__at__ = appl~37__at__ yi__at__;
                                                                if~40__at__ = appl~38__at__;
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(m__at____appl~37)
Clauses:     
                                                                   flatten_fun~28__at____appl~37 = fun n -> (
                                                                   
                                                                    appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                                                                    ack~1 = appl~5;
                                                                    int~6 = 0;
                                                                    binop~7 = m__at____appl~37 == int~6;
                                                                    if~27 = binop~7 
                                                                    ? (
                                                                    int~8 = 1;
                                                                    binop~9 = n + int~8
                                                                    ) : (
                                                                    int~10 = 0;
                                                                    binop~11 = n == int~10;
                                                                    if~26 = binop~11 
                                                                    ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m__at____appl~37 - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )));
                                                                   appl~37__at__ = flatten_fun~28__at____appl~37;
                                                                   appl~38__at__ = appl~37__at__ yi__at__;
                                                                   if~40__at__ = appl~38__at__;
                                                                   ~result__at__ = if~40__at__
                                                                 

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(flatten_fun~28__at____appl~37)
Clauses:     

  appl~37__at__ = flatten_fun~28__at____appl~37;
  appl~38__at__ = appl~37__at__ yi__at__;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~37__at__)
Clauses:     
                                                                appl~38__at__ = appl~37__at__ yi__at__;
                                                                if~40__at__ = appl~38__at__;
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~38__at__)
Clauses:     
                                                                n__at____appl~38 = yi__at__;
                                                                appl~5__at____appl~38 = ack~0__at____appl~31 ack~0__at____appl~31;
                                                                ack~1__at____appl~38 = appl~5__at____appl~38;
                                                                int~6__at____appl~38 = 0;
                                                                binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
                                                                if~27__at____appl~38 = binop~7__at____appl~38 
                                                                ? (
                                                                    int~8__at____appl~38 = 1;
                                                                    binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                                    ) : 
                                                                    (
                                                                    int~10__at____appl~38 = 0;
                                                                    binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                                    if~26__at____appl~38 = binop~11__at____appl~38 
                                                                    ? (
                                                                    int~12__at____appl~38 = 1;
                                                                    binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                    appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                    int~15__at____appl~38 = 1;
                                                                    appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                                    ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    ));
                                                                appl~38__at__ = if~27__at____appl~38;
                                                                if~40__at__ = appl~38__at__;
                                                                ~result__at__ = if~40__at__
                                                              

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(n__at____appl~38)
Clauses:     
                                                                   appl~5__at____appl~38 = ack~0__at____appl~31 ack~0__at____appl~31;
                                                                   ack~1__at____appl~38 = appl~5__at____appl~38;
                                                                   int~6__at____appl~38 = 0;
                                                                   binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
                                                                   if~27__at____appl~38 = binop~7__at____appl~38 
                                                                   ? (
                                                                    int~8__at____appl~38 = 1;
                                                                    binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                                    ) : 
                                                                    (
                                                                    int~10__at____appl~38 = 0;
                                                                    binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                                    if~26__at____appl~38 = binop~11__at____appl~38 
                                                                    ? (
                                                                    int~12__at____appl~38 = 1;
                                                                    binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                    appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                    int~15__at____appl~38 = 1;
                                                                    appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                                    ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    ));
                                                                   appl~38__at__ = if~27__at____appl~38;
                                                                   if~40__at__ = appl~38__at__;
                                                                   ~result__at__ = if~40__at__
                                                                 

2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~5__at____appl~38)
Clauses:     

  ack~0__at____appl~5__appl~38 = ack~0__at____appl~31;
  flatten_fun~29__at____appl~5__appl~38 = fun m -> (
  
    flatten_fun~28 = fun n -> (
    
      appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
      ack~1 = appl~5;
      int~6 = 0;
      binop~7 = m == int~6;
      if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                              int~10 = 0;
                                                              binop~11 = n == int~10;
                                                              if~26 = binop~11 
                                                              ? (
                                                                   int~12 = 1;
                                                                   binop~13 = m - int~12;
                                                                   appl~14 = ack~1 binop~13;
                                                                   int~15 = 1;
                                                                   appl~16 = appl~14 int~15
                                                                  ) : 
                                                                  (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                             )
      )
    );
  appl~5__at____appl~38 = flatten_fun~29__at____appl~5__appl~38;
  ack~1__at____appl~38 = appl~5__at____appl~38;
  int~6__at____appl~38 = 0;
  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(ack~0__at____appl~5__appl~38)
Clauses:     

  flatten_fun~29__at____appl~5__appl~38 = fun m -> (
  
    flatten_fun~28 = fun n -> (
    
      appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
      ack~1 = appl~5;
      int~6 = 0;
      binop~7 = m == int~6;
      if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : (
                                                              int~10 = 0;
                                                              binop~11 = n == int~10;
                                                              if~26 = binop~11 
                                                              ? (
                                                                   int~12 = 1;
                                                                   binop~13 = m - int~12;
                                                                   appl~14 = ack~1 binop~13;
                                                                   int~15 = 1;
                                                                   appl~16 = appl~14 int~15
                                                                  ) : 
                                                                  (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                                             )
      )
    );
  appl~5__at____appl~38 = flatten_fun~29__at____appl~5__appl~38;
  ack~1__at____appl~38 = appl~5__at____appl~38;
  int~6__at____appl~38 = 0;
  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(flatten_fun~29__at____appl~5__appl~38)
Clauses:     

  appl~5__at____appl~38 = flatten_fun~29__at____appl~5__appl~38;
  ack~1__at____appl~38 = appl~5__at____appl~38;
  int~6__at____appl~38 = 0;
  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(appl~5__at____appl~38)
Clauses:     

  ack~1__at____appl~38 = appl~5__at____appl~38;
  int~6__at____appl~38 = 0;
  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(ack~1__at____appl~38)
Clauses:     

  int~6__at____appl~38 = 0;
  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(int~6__at____appl~38)
Clauses:     

  binop~7__at____appl~38 = m__at____appl~37 == int~6__at____appl~38;
  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(binop~7__at____appl~38)
Clauses:     

  if~27__at____appl~38 = binop~7__at____appl~38 ? (
                                                     int~8__at____appl~38 = 1;
                                                     binop~9__at____appl~38 = n__at____appl~38 + int~8__at____appl~38
                                                    ) : (
                                                           int~10__at____appl~38 = 0;
                                                           binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
                                                           if~26__at____appl~38 = binop~11__at____appl~38 
                                                           ? (
                                                                int~12__at____appl~38 = 1;
                                                                binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                                appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                                int~15__at____appl~38 = 1;
                                                                appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                               ) : (
                                                                    int~17__at____appl~38 = 0;
                                                                    target__at____appl~38 = int~17__at____appl~38;
                                                                    int~18__at____appl~38 = 1;
                                                                    binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                                    appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                                    appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                                    int~22__at____appl~38 = 1;
                                                                    binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                                    appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                                    appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                                    )
                                                          );
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(if~27__at____appl~38)
Clauses:     

  int~10__at____appl~38 = 0;
  binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
  if~26__at____appl~38 = binop~11__at____appl~38 ? (
                                                      int~12__at____appl~38 = 1;
                                                      binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                      appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                      int~15__at____appl~38 = 1;
                                                      appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                     ) : (
                                                            int~17__at____appl~38 = 0;
                                                            target__at____appl~38 = int~17__at____appl~38;
                                                            int~18__at____appl~38 = 1;
                                                            binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                            appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                            appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                            int~22__at____appl~38 = 1;
                                                            binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                            appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                            appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                           );
  if~27__at____appl~38 = if~26__at____appl~38;
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 int~10__at____appl~38 -> 0,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(int~10__at____appl~38)
Clauses:     

  binop~11__at____appl~38 = n__at____appl~38 == int~10__at____appl~38;
  if~26__at____appl~38 = binop~11__at____appl~38 ? (
                                                      int~12__at____appl~38 = 1;
                                                      binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                      appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                      int~15__at____appl~38 = 1;
                                                      appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                     ) : (
                                                            int~17__at____appl~38 = 0;
                                                            target__at____appl~38 = int~17__at____appl~38;
                                                            int~18__at____appl~38 = 1;
                                                            binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                            appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                            appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                            int~22__at____appl~38 = 1;
                                                            binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                            appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                            appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                           );
  if~27__at____appl~38 = if~26__at____appl~38;
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 binop~11__at____appl~38 -> false,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 int~10__at____appl~38 -> 0,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(binop~11__at____appl~38)
Clauses:     

  if~26__at____appl~38 = binop~11__at____appl~38 ? (
                                                      int~12__at____appl~38 = 1;
                                                      binop~13__at____appl~38 = m__at____appl~37 - int~12__at____appl~38;
                                                      appl~14__at____appl~38 = ack~1__at____appl~38 binop~13__at____appl~38;
                                                      int~15__at____appl~38 = 1;
                                                      appl~16__at____appl~38 = appl~14__at____appl~38 int~15__at____appl~38
                                                     ) : (
                                                            int~17__at____appl~38 = 0;
                                                            target__at____appl~38 = int~17__at____appl~38;
                                                            int~18__at____appl~38 = 1;
                                                            binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
                                                            appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
                                                            appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
                                                            int~22__at____appl~38 = 1;
                                                            binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
                                                            appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
                                                            appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38
                                                           );
  if~27__at____appl~38 = if~26__at____appl~38;
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 binop~11__at____appl~38 -> false,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 binop~35__at__ -> true,
                 int~10__at____appl~38 -> 0,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(if~26__at____appl~38)
Clauses:     

  int~17__at____appl~38 = 0;
  target__at____appl~38 = int~17__at____appl~38;
  int~18__at____appl~38 = 1;
  binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
  appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
  appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
  int~22__at____appl~38 = 1;
  binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
  appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
  appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38;
  if~26__at____appl~38 = appl~25__at____appl~38;
  if~27__at____appl~38 = if~26__at____appl~38;
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


2019/07/10 16:25:21:DEBUG: [Interpreter]: 
Environment: {
                 appl~5__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 xi__at__ -> 1,
                 m__at____appl~37 -> 1,
                 yi__at__ -> 1,
                 binop~33__at__ -> true,
                 ack~0__at____appl~5__appl~38 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~34__at__ -> 0,
                 flatten_fun~30__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 n__at____appl~38 -> 1,
                 ack__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~31 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 input~4__at__ -> 1,
                 binop~11__at____appl~38 -> false,
                 input~3__at__ -> 1,
                 ack~0__at____appl~31 ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~17__at____appl~38 -> 0,
                 binop~35__at__ -> true,
                 int~10__at____appl~38 -> 0,
                 flatten_fun~28__at____appl~37 ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 ack~0~2__at__ ->
                   fun ack~0 -> (
                   
                     flatten_fun~29 = fun m -> (
                     
                       flatten_fun~28 = fun n -> (
                       
                         appl~5 = ack~0 ack~0;
                         ack~1 = appl~5;
                         int~6 = 0;
                         binop~7 = m == int~6;
                         if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                             (
                                                int~10 = 0;
                                                binop~11 = n == int~10;
                                                if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                    ) : 
                                                                    (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                               )
                         )
                       )
                     ),
                 int~6__at____appl~38 -> 0,
                 ack~1__at____appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 flatten_fun~29__at____appl~5__appl~38 ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~5__appl~38 ack~0__at____appl~5__appl~38;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     ),
                 appl~37__at__ ->
                   fun n -> (
                   
                     appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                     ack~1 = appl~5;
                     int~6 = 0;
                     binop~7 = m__at____appl~37 == int~6;
                     if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                         (
                                            int~10 = 0;
                                            binop~11 = n == int~10;
                                            if~26 = binop~11 ? (
                                                                  int~12 = 1;
                                                                  binop~13 = m__at____appl~37 - int~12;
                                                                  appl~14 = ack~1 binop~13;
                                                                  int~15 = 1;
                                                                  appl~16 = appl~14 int~15
                                                                 ) : 
                                                                 (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m__at____appl~37 - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m__at____appl~37;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                   )
                                           )
                     ),
                 binop~7__at____appl~38 -> false,
                 binop~36__at__ -> true,
                 int~32__at__ -> 0,
                 appl~31__at__ ->
                   fun m -> (
                   
                     flatten_fun~28 = fun n -> (
                     
                       appl~5 = ack~0__at____appl~31 ack~0__at____appl~31;
                       ack~1 = appl~5;
                       int~6 = 0;
                       binop~7 = m == int~6;
                       if~27 = binop~7 ? (int~8 = 1; binop~9 = n + int~8) : 
                                           (
                                              int~10 = 0;
                                              binop~11 = n == int~10;
                                              if~26 = binop~11 ? (
                                                                    int~12 = 1;
                                                                    binop~13 = m - int~12;
                                                                    appl~14 = ack~1 binop~13;
                                                                    int~15 = 1;
                                                                    appl~16 = appl~14 int~15
                                                                   ) : 
                                                                   (
                                                                    int~17 = 0;
                                                                    target = int~17;
                                                                    int~18 = 1;
                                                                    binop~19 = m - int~18;
                                                                    appl~20 = ack~1 binop~19;
                                                                    appl~21 = ack~1 m;
                                                                    int~22 = 1;
                                                                    binop~23 = n - int~22;
                                                                    appl~24 = appl~21 binop~23;
                                                                    appl~25 = appl~20 appl~24
                                                                    )
                                             )
                       )
                     )
              }
Last var:    Some(int~17__at____appl~38)
Clauses:     

  target__at____appl~38 = int~17__at____appl~38;
  int~18__at____appl~38 = 1;
  binop~19__at____appl~38 = m__at____appl~37 - int~18__at____appl~38;
  appl~20__at____appl~38 = ack~1__at____appl~38 binop~19__at____appl~38;
  appl~21__at____appl~38 = ack~1__at____appl~38 m__at____appl~37;
  int~22__at____appl~38 = 1;
  binop~23__at____appl~38 = n__at____appl~38 - int~22__at____appl~38;
  appl~24__at____appl~38 = appl~21__at____appl~38 binop~23__at____appl~38;
  appl~25__at____appl~38 = appl~20__at____appl~38 appl~24__at____appl~38;
  if~26__at____appl~38 = appl~25__at____appl~38;
  if~27__at____appl~38 = if~26__at____appl~38;
  appl~38__at__ = if~27__at____appl~38;
  if~40__at__ = appl~38__at__;
  ~result__at__ = if~40__at__


Input sequence: [1, 1]
Generated in 9232 steps.

Requested input sequences found; terminating.
1.39user 0.01system 0:01.42elapsed 99%CPU (0avgtext+0avgdata 58380maxresident)k
0inputs+1328outputs (0major+8944minor)pagefaults 0swaps
