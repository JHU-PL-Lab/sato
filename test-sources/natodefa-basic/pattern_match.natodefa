# EXPECT-WELL-FORMED
# EXPECT-EVALUATE
# EXPECT-ANALYSIS-LOOKUP-FROM-END ~result {int}
# Note: DDPA will complain about inconsistency due to potentially projecting on a non-record
# # EXPECT-ANALYSIS-NO-INCONSISTENCIES
# EXPECT-NO-TYPE-ERRORS

let match_fn x =
    match x with
    | int -> x + 0
    | bool -> 1 
    | fun -> 2 
    | {head = y} -> y + 3
    | `steve (z) -> z + 4
    | hd :: tl -> hd + 5
    | [] -> 6
    end
in
let a = match_fn 1 in
let b = match_fn true in
let c = match_fn (fun x -> x) in
let d = match_fn {head = 2, tail = 3} in
let e = match_fn (`steve 4) in
let f = match_fn [0 , 1, 2, 3, 4, 5, 6, 7, 8] in
let g = match_fn [] in
a + b + c + d + e + f + g
