# EXPECT-WELL-FORMED
# EXPECT-TYPE-ERROR-COUNT 2
# EXPECT-REQUIRED-INPUT-SEQUENCE-GENERATION-STEPS 20000
# EXPECT-TYPE-ERROR ~result [0] "n + 1" "n = hd" "true" "int" "bool"
# EXPECT-TYPE-ERROR ~result [1] "n + 1" "n = hd" "true" "int" "bool"

let rec map fn lst =
    match lst with
    | hd :: tl -> (fn hd) :: (map fn tl) # Test without parens!
    | [] -> []
    end
in
let inc n = n + 1 in
let i = input in
if i == 0 then (map inc) [1, true] else (map inc) [true, 1]
